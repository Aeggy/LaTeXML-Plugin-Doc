\documentclass{article}
\usepackage[show]{ed}
\usepackage{amstext,amsmath,amssymb}


% \usepackage{mdframed}
% \newenvironment{boxedquote}{\begin{mdframed}[leftmargin=1cm,rightmargin=1cm]}{\end{mdframed}}

\usepackage{wrapfig,paralist}
\usepackage[hyperref,style=alphabetic,backend=bibtex]{biblatex}
% \addbibresource{kwarcpubs.bib}
% \addbibresource{extpubs.bib}
% \addbibresource{kwarccrossrefs.bib}
% \addbibresource{extcrossrefs.bib}

\usepackage{hyperref}

 \title{System Description: A Semantics-Aware {\LaTeX}-to-Office Converter}
 \author{Lukas Kohlhase and Michael Kohlhase}
\institute{Mathematics/Computer Science\\
  Jacobs University Bremen}
\begin{document} 
\maketitle
\begin{abstract}
  We present a {\LaTeX}-to-Office conversion plugin for \latexml that can bridge the
  divide between publication practices in the theoretical disciplines (\LaTeX) and the
  applied ones (predominantly Office). The advantage of this plugin over other converters
  is that \latexml conserves enough of the document- and formula structure, that the
  transformed structures can be edited and processed further.
\end{abstract}

\section{Problem \& State of the Art}\label{sec:intro}

Technical documents from the STEM (\underline{S}cience, \underline{T}echnology,
\underline{E}ngineering, and \underline{M}athematics) fields augment the text with structured
objects -- images, mathematical/chemical formulae, diagrams, and tables -- that carry
essential parts of the information. There are two camps with different techniques for
authoring documents. The more theoretical disciplines (Mathematics, Physics, and Computer
Science) almost exclusively {\LaTeX}, while the more applied ones (e.g. Life Sciences,
Chemistry, Engineering) use Office Suites almost exclusively. Transforming between these
two document formatting approaches is non-trivial: The {\TeX/\LaTeX} paradigm relies on
in-document macros to ``program'' documents, empowering authors to automate document
aspects and leading to community-supplied domain-specific extensions via {\LaTeX}
packages. Office suites rely on document-styles that adapt visual parameters of the
underlying document markup either document-wide or for individual elements.

This incompatibility of document preparation approaches causes friction in cross-paradigm
collaboration as each camp deems their approach vastly superior and the other's
insufferable. In this paper, we will discuss the transformation from {\TeX/\LaTeX} to
Office documents.


    \includegraphics[width=5cm]{mathsnippet-libreoffice}\\\hline

There are several methods to transform papers from {\LaTeX} to an office word
processor. The first method is to just generate a PDF file and then open this file in
Word/LibreOffice. This achieves the goal of looking like the desired PDF document, just in
Office. There are two problems with this route: 
\begin{enumerate}
\item mathematical formulae are not preserved (see Figure~\ref{fig:cnp})
\item even if the result looks OK the results have lost their links (e.g. for
  citations/references or label/ref), or become difficult to edit, because they do not
  conform to the styling system of the word processor.
\end{enumerate}
The fundamental problem is that it converts the appearance of the document and loses
meaning due to macro expansion. This is especially blatant when looking at the math in a
document. Either it is treated as text, with no meaningful way to distinguish between math
and formatted text that happens to contain some mathematical symbols, making automatic
treatment of this kind of math difficult, or it is represented by an image of the relevant
formulae, which makes editing extremely impractical, if not impossible. The same holds true
for references, they are essentially treated as parts of text with a linked number in
front of them, complicating adding new references substantially.

The other way of transforming {\LaTeX} to Word, by transforming the {\LaTeX} source file
directly, avoids these problems. \texttt{latex2rtf}~\cite{latex2rtf:on} is a widely used
system that uses a custom parser to convert a non-trivial fragment of {\LaTeX} to the RTF
format understood by most office systems. The system works well, but coverage is limited
by the {\LaTeX} parser and the aging RTF format.  TeX4ht~\cite{tex4ht:online}, which uses
the {\TeX} parser itself and seeds the output with custom directives that are parsed to
create HTML has a post-processor that generates ODF. Its coverage of {\LaTeX} is unlimited,
but the intermediate format HTML somewhat limits the range of document fragments that can
be generated. 

Here we present a similar approach, only that we extend the backend of the \latexml system
to generate WML -- the file format of MS Word -- and ODT -- that of Libre- and
OpenOffice. Like \texttt{latex2rdf} \latexml directly parses {\LaTeX} source files, but
the coverage of \TeX is complete (including macro definitions) and semantics-preserving
bindings for the most important {\LaTeX} packages are provided. The main difference to
TeX4ht is that \latexml generates an XML representation that is structurally near to the
{\LaTeX} sources and preserves the author-supplied semantics for further processing.

\section{The Office Formats}\label{sec:target}

WML and ODT follow the same architectural paradigm: they are both zip-packaged
directories; their contents and structure differ mainly in media types, XML document
types, and naming. We will use WML in our presentation here and point out differences in
ODT as we go along.


\end{document}


%  LocalWords:  maketitle ednote hline libreoffice includegraphics mathsnippet cnp Hier
%  LocalWords:  einen einfuegen glaube ich docx impl odt Latexml erlaerung eigentlich px
%  LocalWords:  nicht zufrieden hiermit concl printbibliography cience echnology texttt
%  LocalWords:  ngineering athematics latex2rdf tikzpicture yscale xscale tikzstyle bx tt
%  LocalWords:  paper.ltxml group.ltxml ltmxl ltxml stex CPoint CWord ist Trennung und rm
%  LocalWords:  zwischen theoretisch praktisch ganz recht angewandte mathematiker bzw
%  LocalWords:  Physiker benutzen doch auch Libre rels fonttable.xml wrapfigure vspace
%  LocalWords:  lstinputlisting basicstyle scriptsize wmlmath.xml textsf latexmlc
%  LocalWords:  inparaenum TeXMaths
